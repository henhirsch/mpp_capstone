# make service_branch a factor variable
test_data1$service_branch <- as.factor(test_data1$service_branch)
# add column showing whether headcount is >= 2000
test_data1 <- test_data1 %>%
mutate(headcount_below_2000 = ifelse(total_sponsors < 2000, "Yes", "No"))
# create latitude and longitude columns from coordinates column
coordinates_split <- strsplit(as.character(test_data1$coordinates), ", ")
latitude <- sapply(coordinates_split, `[`, 1)
longitude <- sapply(coordinates_split, `[`, 2)
test_data1$latitude <- latitude
test_data1$longitude <- longitude
# change order of columns
test_data1 <- test_data1[, c("state", "base", "service_branch", "zip_code", "coordinates", "longitude", "latitude", "nmc", "miles_to_nmc", "headcount_below_2000", "total_sponsors", "total_spouses", "children0-5", "children6-11", "children12-18", "children19andup", "other_dependents", "total_personnel")]
# remove rows where base = Other
test_data2 <- test_data1[test_data1$base != "Other", ]
# remove rows where service_branch = DoD?
# make latitude and longitude columns numeric
# test_data2$latitude <- as.numeric(test_data2$latitude)
# test_data2$longitude <- as.numeric(test_data2$longitude)
# set number of decimal points equal to 6
test_data2$latitude <- format(test_data2$latitude, nsmall = 6)
test_data2$longitude <- format(test_data2$longitude, nsmall = 6)
# make latitude and longitude columns numeric
test_data2$latitude <- as.numeric(test_data2$latitude)
test_data2$longitude <- as.numeric(test_data2$longitude)
# transform values
transformed_data <- usmap_transform(test_data2, input_names = c("longitude", "latitude"), output_names = NULL)
# set caption text
installations_caption_text <- paste("Source: The Department of Defense's <i>2019 Demographics Report: Profile of the Military Community</i>. No newer data on military installation headcounts is available. The Department of Defense stopped publishing disaggregated headcount data after 2019.")
# set wrapped caption width
installations_wrapped_caption <- paste(strwrap(installations_caption_text, width = 75), collapse = "\n")
# plot map
all_installations_map <- plot_usmap() +
geom_sf(
data = transformed_data,
aes(size = total_sponsors, color = service_branch),
alpha = 0.60
) +
labs(title = "Active Duty Personnel on U.S. Military Installations",
caption = installations_wrapped_caption) +
scale_color_manual(values = c("Navy" = "blue",
"Army" = "green",
"Marine Corps" = "red",
"Air Force" = "orange",
"DoD" = "purple"),
name = "Service Branch") +
scale_size_continuous(labels = comma,
name = "Installation Headcount") +
theme(plot.title = element_text(hjust = 0, size = 25),
legend.position = "left",
legend.direction = "vertical",
legend.box = "vertical",
legend.justification = "right",
legend.spacing.x = unit(0, "cm"),
legend.spacing.y = unit(0.1, "cm"),
legend.margin = margin(r = -100),
legend.text = element_text(size = 10),
legend.key.size = unit(2, "lines"),
# plot.caption = element_text(hjust = 0, margin = margin(t = 10, r = 0, b = 0, l = 0)),
plot.caption = element_markdown(),
plot.margin = margin(20, 20, 20, 20))
all_installations_map
# export map
ggsave(here("output", "all_installations_map.jpg"), plot = all_installations_map, width = 12, height = 9, dpi = 300)
# create copy of initial data frame
test_data1 <- test_data0
# make service_branch a factor variable
test_data1$service_branch <- as.factor(test_data1$service_branch)
# add column showing whether headcount is >= 2000
test_data1 <- test_data1 %>%
mutate(headcount_below_2000 = ifelse(total_sponsors < 2000, "Yes", "No"))
# create latitude and longitude columns from coordinates column
coordinates_split <- strsplit(as.character(test_data1$coordinates), ", ")
latitude <- sapply(coordinates_split, `[`, 1)
longitude <- sapply(coordinates_split, `[`, 2)
test_data1$latitude <- latitude
test_data1$longitude <- longitude
# change order of columns
test_data1 <- test_data1[, c("state", "base", "service_branch", "zip_code", "coordinates", "longitude", "latitude", "nmc", "miles_to_nmc", "headcount_below_2000", "total_sponsors", "total_spouses", "children0-5", "children6-11", "children12-18", "children19andup", "other_dependents", "total_personnel")]
# remove rows where base = Other
test_data2 <- test_data1[test_data1$base != "Other", ]
# remove rows where service_branch = DoD?
# make latitude and longitude columns numeric
# test_data2$latitude <- as.numeric(test_data2$latitude)
# test_data2$longitude <- as.numeric(test_data2$longitude)
# set number of decimal points equal to 6
test_data2$latitude <- format(test_data2$latitude, nsmall = 6)
test_data2$longitude <- format(test_data2$longitude, nsmall = 6)
# make latitude and longitude columns numeric
test_data2$latitude <- as.numeric(test_data2$latitude)
test_data2$longitude <- as.numeric(test_data2$longitude)
# transform values
transformed_data <- usmap_transform(test_data2, input_names = c("longitude", "latitude"), output_names = NULL)
# set caption text
installations_caption_text <- paste("Source: The Department of Defense's <i>2019 Demographics Report: Profile of the Military Community</i>. No newer data on military installation headcounts is available. The Department of Defense stopped publishing disaggregated headcount data after 2019.")
# set wrapped caption width
installations_wrapped_caption <- paste(strwrap(installations_caption_text, width = 75), collapse = "\n")
# plot map
all_installations_map <- plot_usmap() +
geom_sf(
data = transformed_data,
aes(size = total_sponsors, color = service_branch),
alpha = 0.60
) +
labs(title = "Active Duty Personnel on U.S. Military Installations",
caption = installations_wrapped_caption) +
scale_color_manual(values = c("Navy" = "blue",
"Army" = "green",
"Marine Corps" = "red",
"Air Force" = "orange",
"DoD" = "purple"),
name = "Service Branch") +
scale_size_continuous(labels = comma,
name = "Installation Headcount") +
theme(plot.title = element_text(hjust = 0, size = 25),
legend.position = "left",
legend.direction = "vertical",
legend.box = "vertical",
legend.justification = "right",
legend.spacing.x = unit(0, "cm"),
legend.spacing.y = unit(0.1, "cm"),
legend.margin = margin(r = -100),
legend.text = element_text(size = 10),
legend.key.size = unit(2, "lines"),
# plot.caption = element_text(hjust = 0, margin = margin(t = 10, r = 0, b = 0, l = 0)),
plot.caption = element_markdown(width = unit(60, "line")),
plot.margin = margin(20, 20, 20, 20))
# create copy of initial data frame
test_data1 <- test_data0
# make service_branch a factor variable
test_data1$service_branch <- as.factor(test_data1$service_branch)
# add column showing whether headcount is >= 2000
test_data1 <- test_data1 %>%
mutate(headcount_below_2000 = ifelse(total_sponsors < 2000, "Yes", "No"))
# create latitude and longitude columns from coordinates column
coordinates_split <- strsplit(as.character(test_data1$coordinates), ", ")
latitude <- sapply(coordinates_split, `[`, 1)
longitude <- sapply(coordinates_split, `[`, 2)
test_data1$latitude <- latitude
test_data1$longitude <- longitude
# change order of columns
test_data1 <- test_data1[, c("state", "base", "service_branch", "zip_code", "coordinates", "longitude", "latitude", "nmc", "miles_to_nmc", "headcount_below_2000", "total_sponsors", "total_spouses", "children0-5", "children6-11", "children12-18", "children19andup", "other_dependents", "total_personnel")]
# remove rows where base = Other
test_data2 <- test_data1[test_data1$base != "Other", ]
# remove rows where service_branch = DoD?
# make latitude and longitude columns numeric
# test_data2$latitude <- as.numeric(test_data2$latitude)
# test_data2$longitude <- as.numeric(test_data2$longitude)
# set number of decimal points equal to 6
test_data2$latitude <- format(test_data2$latitude, nsmall = 6)
test_data2$longitude <- format(test_data2$longitude, nsmall = 6)
# make latitude and longitude columns numeric
test_data2$latitude <- as.numeric(test_data2$latitude)
test_data2$longitude <- as.numeric(test_data2$longitude)
# transform values
transformed_data <- usmap_transform(test_data2, input_names = c("longitude", "latitude"), output_names = NULL)
# set caption text
installations_caption_text <- paste("Source: The Department of Defense's <i>2019 Demographics Report: Profile of the Military Community</i>. No newer data on military installation headcounts is available. The Department of Defense stopped publishing disaggregated headcount data after 2019.")
# set wrapped caption width
installations_wrapped_caption <- paste(strwrap(installations_caption_text, width = 75), collapse = "\n")
# plot map
all_installations_map <- plot_usmap() +
geom_sf(
data = transformed_data,
aes(size = total_sponsors, color = service_branch),
alpha = 0.60
) +
labs(title = "Active Duty Personnel on U.S. Military Installations",
caption = installations_wrapped_caption) +
scale_color_manual(values = c("Navy" = "blue",
"Army" = "green",
"Marine Corps" = "red",
"Air Force" = "orange",
"DoD" = "purple"),
name = "Service Branch") +
scale_size_continuous(labels = comma,
name = "Installation Headcount") +
theme(plot.title = element_text(hjust = 0, size = 25),
legend.position = "left",
legend.direction = "vertical",
legend.box = "vertical",
legend.justification = "right",
legend.spacing.x = unit(0, "cm"),
legend.spacing.y = unit(0.1, "cm"),
legend.margin = margin(r = -100),
legend.text = element_text(size = 10),
legend.key.size = unit(2, "lines"),
# plot.caption = element_text(hjust = 0, margin = margin(t = 10, r = 0, b = 0, l = 0)),
plot.caption = element_markdown(width = 60)),
# create copy of initial data frame
test_data1 <- test_data0
# make service_branch a factor variable
test_data1$service_branch <- as.factor(test_data1$service_branch)
# add column showing whether headcount is >= 2000
test_data1 <- test_data1 %>%
mutate(headcount_below_2000 = ifelse(total_sponsors < 2000, "Yes", "No"))
# create latitude and longitude columns from coordinates column
coordinates_split <- strsplit(as.character(test_data1$coordinates), ", ")
latitude <- sapply(coordinates_split, `[`, 1)
longitude <- sapply(coordinates_split, `[`, 2)
test_data1$latitude <- latitude
test_data1$longitude <- longitude
# change order of columns
test_data1 <- test_data1[, c("state", "base", "service_branch", "zip_code", "coordinates", "longitude", "latitude", "nmc", "miles_to_nmc", "headcount_below_2000", "total_sponsors", "total_spouses", "children0-5", "children6-11", "children12-18", "children19andup", "other_dependents", "total_personnel")]
# remove rows where base = Other
test_data2 <- test_data1[test_data1$base != "Other", ]
# remove rows where service_branch = DoD?
# make latitude and longitude columns numeric
# test_data2$latitude <- as.numeric(test_data2$latitude)
# test_data2$longitude <- as.numeric(test_data2$longitude)
# set number of decimal points equal to 6
test_data2$latitude <- format(test_data2$latitude, nsmall = 6)
test_data2$longitude <- format(test_data2$longitude, nsmall = 6)
# make latitude and longitude columns numeric
test_data2$latitude <- as.numeric(test_data2$latitude)
test_data2$longitude <- as.numeric(test_data2$longitude)
# transform values
transformed_data <- usmap_transform(test_data2, input_names = c("longitude", "latitude"), output_names = NULL)
# set caption text
installations_caption_text <- paste("Source: The Department of Defense's <i>2019 Demographics Report: Profile of the Military Community</i>. No newer data on military installation headcounts is available. The Department of Defense stopped publishing disaggregated headcount data after 2019.")
# set wrapped caption width
installations_wrapped_caption <- paste(strwrap(installations_caption_text, width = 75), collapse = "\n")
# plot map
all_installations_map <- plot_usmap() +
geom_sf(
data = transformed_data,
aes(size = total_sponsors, color = service_branch),
alpha = 0.60
) +
labs(title = "Active Duty Personnel on U.S. Military Installations",
caption = installations_wrapped_caption) +
scale_color_manual(values = c("Navy" = "blue",
"Army" = "green",
"Marine Corps" = "red",
"Air Force" = "orange",
"DoD" = "purple"),
name = "Service Branch") +
scale_size_continuous(labels = comma,
name = "Installation Headcount") +
theme(plot.title = element_text(hjust = 0, size = 25),
legend.position = "left",
legend.direction = "vertical",
legend.box = "vertical",
legend.justification = "right",
legend.spacing.x = unit(0, "cm"),
legend.spacing.y = unit(0.1, "cm"),
legend.margin = margin(r = -100),
legend.text = element_text(size = 10),
legend.key.size = unit(2, "lines"),
# plot.caption = element_text(hjust = 0, margin = margin(t = 10, r = 0, b = 0, l = 0)),
plot.caption = element_text(width = unit(60, "line")),
plot.margin = margin(20, 20, 20, 20))
# create copy of initial data frame
test_data1 <- test_data0
# make service_branch a factor variable
test_data1$service_branch <- as.factor(test_data1$service_branch)
# add column showing whether headcount is >= 2000
test_data1 <- test_data1 %>%
mutate(headcount_below_2000 = ifelse(total_sponsors < 2000, "Yes", "No"))
# create latitude and longitude columns from coordinates column
coordinates_split <- strsplit(as.character(test_data1$coordinates), ", ")
latitude <- sapply(coordinates_split, `[`, 1)
longitude <- sapply(coordinates_split, `[`, 2)
test_data1$latitude <- latitude
test_data1$longitude <- longitude
# change order of columns
test_data1 <- test_data1[, c("state", "base", "service_branch", "zip_code", "coordinates", "longitude", "latitude", "nmc", "miles_to_nmc", "headcount_below_2000", "total_sponsors", "total_spouses", "children0-5", "children6-11", "children12-18", "children19andup", "other_dependents", "total_personnel")]
# remove rows where base = Other
test_data2 <- test_data1[test_data1$base != "Other", ]
# remove rows where service_branch = DoD?
# make latitude and longitude columns numeric
# test_data2$latitude <- as.numeric(test_data2$latitude)
# test_data2$longitude <- as.numeric(test_data2$longitude)
# set number of decimal points equal to 6
test_data2$latitude <- format(test_data2$latitude, nsmall = 6)
test_data2$longitude <- format(test_data2$longitude, nsmall = 6)
# make latitude and longitude columns numeric
test_data2$latitude <- as.numeric(test_data2$latitude)
test_data2$longitude <- as.numeric(test_data2$longitude)
# transform values
transformed_data <- usmap_transform(test_data2, input_names = c("longitude", "latitude"), output_names = NULL)
# set caption text
installations_caption_text <- paste("Source: The Department of Defense's <i>2019 Demographics Report: Profile of the Military Community</i>. No newer data on military installation headcounts is available. The Department of Defense stopped publishing disaggregated headcount data after 2019.")
# set wrapped caption width
installations_wrapped_caption <- paste(strwrap(installations_caption_text, width = 75), collapse = "\n")
# plot map
all_installations_map <- plot_usmap() +
geom_sf(
data = transformed_data,
aes(size = total_sponsors, color = service_branch),
alpha = 0.60
) +
labs(title = "Active Duty Personnel on U.S. Military Installations",
caption = installations_wrapped_caption) +
scale_color_manual(values = c("Navy" = "blue",
"Army" = "green",
"Marine Corps" = "red",
"Air Force" = "orange",
"DoD" = "purple"),
name = "Service Branch") +
scale_size_continuous(labels = comma,
name = "Installation Headcount") +
theme(plot.title = element_text(hjust = 0, size = 25),
legend.position = "left",
legend.direction = "vertical",
legend.box = "vertical",
legend.justification = "right",
legend.spacing.x = unit(0, "cm"),
legend.spacing.y = unit(0.1, "cm"),
legend.margin = margin(r = -100),
legend.text = element_text(size = 10),
legend.key.size = unit(2, "lines"),
# plot.caption = element_text(hjust = 0, margin = margin(t = 10, r = 0, b = 0, l = 0)),
plot.margin = margin(20, 20, 20, 20))
all_installations_map
# export map
ggsave(here("output", "all_installations_map.jpg"), plot = all_installations_map, width = 12, height = 9, dpi = 300)
# create copy of initial data frame
test_data1 <- test_data0
# make service_branch a factor variable
test_data1$service_branch <- as.factor(test_data1$service_branch)
# add column showing whether headcount is >= 2000
test_data1 <- test_data1 %>%
mutate(headcount_below_2000 = ifelse(total_sponsors < 2000, "Yes", "No"))
# create latitude and longitude columns from coordinates column
coordinates_split <- strsplit(as.character(test_data1$coordinates), ", ")
latitude <- sapply(coordinates_split, `[`, 1)
longitude <- sapply(coordinates_split, `[`, 2)
test_data1$latitude <- latitude
test_data1$longitude <- longitude
# change order of columns
test_data1 <- test_data1[, c("state", "base", "service_branch", "zip_code", "coordinates", "longitude", "latitude", "nmc", "miles_to_nmc", "headcount_below_2000", "total_sponsors", "total_spouses", "children0-5", "children6-11", "children12-18", "children19andup", "other_dependents", "total_personnel")]
# remove rows where base = Other
test_data2 <- test_data1[test_data1$base != "Other", ]
# remove rows where service_branch = DoD?
# make latitude and longitude columns numeric
# test_data2$latitude <- as.numeric(test_data2$latitude)
# test_data2$longitude <- as.numeric(test_data2$longitude)
# set number of decimal points equal to 6
test_data2$latitude <- format(test_data2$latitude, nsmall = 6)
test_data2$longitude <- format(test_data2$longitude, nsmall = 6)
# make latitude and longitude columns numeric
test_data2$latitude <- as.numeric(test_data2$latitude)
test_data2$longitude <- as.numeric(test_data2$longitude)
# transform values
transformed_data <- usmap_transform(test_data2, input_names = c("longitude", "latitude"), output_names = NULL)
# set caption text
installations_caption_text <- paste("Source: The Department of Defense's 2019 Demographics Report: Profile of the Military Community. No newer data on military installation headcounts is available. The Department of Defense stopped publishing disaggregated headcount data after 2019.")
# set wrapped caption width
installations_wrapped_caption <- paste(strwrap(installations_caption_text, width = 75), collapse = "\n")
# plot map
all_installations_map <- plot_usmap() +
geom_sf(
data = transformed_data,
aes(size = total_sponsors, color = service_branch),
alpha = 0.60
) +
labs(title = "Active Duty Personnel on U.S. Military Installations",
caption = installations_wrapped_caption) +
scale_color_manual(values = c("Navy" = "blue",
"Army" = "green",
"Marine Corps" = "red",
"Air Force" = "orange",
"DoD" = "purple"),
name = "Service Branch") +
scale_size_continuous(labels = comma,
name = "Installation Headcount") +
theme(plot.title = element_text(hjust = 0, size = 25),
legend.position = "left",
legend.direction = "vertical",
legend.box = "vertical",
legend.justification = "right",
legend.spacing.x = unit(0, "cm"),
legend.spacing.y = unit(0.1, "cm"),
legend.margin = margin(r = -100),
legend.text = element_text(size = 10),
legend.key.size = unit(2, "lines"),
# plot.caption = element_text(hjust = 0, margin = margin(t = 10, r = 0, b = 0, l = 0)),
plot.margin = margin(20, 20, 20, 20))
all_installations_map
# export map
ggsave(here("output", "all_installations_map.jpg"), plot = all_installations_map, width = 12, height = 9, dpi = 300)
# create copy of initial data frame
test_data1 <- test_data0
# make service_branch a factor variable
test_data1$service_branch <- as.factor(test_data1$service_branch)
# add column showing whether headcount is >= 2000
test_data1 <- test_data1 %>%
mutate(headcount_below_2000 = ifelse(total_sponsors < 2000, "Yes", "No"))
# create latitude and longitude columns from coordinates column
coordinates_split <- strsplit(as.character(test_data1$coordinates), ", ")
latitude <- sapply(coordinates_split, `[`, 1)
longitude <- sapply(coordinates_split, `[`, 2)
test_data1$latitude <- latitude
test_data1$longitude <- longitude
# change order of columns
test_data1 <- test_data1[, c("state", "base", "service_branch", "zip_code", "coordinates", "longitude", "latitude", "nmc", "miles_to_nmc", "headcount_below_2000", "total_sponsors", "total_spouses", "children0-5", "children6-11", "children12-18", "children19andup", "other_dependents", "total_personnel")]
# remove rows where base = Other
test_data2 <- test_data1[test_data1$base != "Other", ]
# remove rows where service_branch = DoD?
# make latitude and longitude columns numeric
# test_data2$latitude <- as.numeric(test_data2$latitude)
# test_data2$longitude <- as.numeric(test_data2$longitude)
# set number of decimal points equal to 6
test_data2$latitude <- format(test_data2$latitude, nsmall = 6)
test_data2$longitude <- format(test_data2$longitude, nsmall = 6)
# make latitude and longitude columns numeric
test_data2$latitude <- as.numeric(test_data2$latitude)
test_data2$longitude <- as.numeric(test_data2$longitude)
# transform values
transformed_data <- usmap_transform(test_data2, input_names = c("longitude", "latitude"), output_names = NULL)
# set caption text
installations_caption_text <- paste("Source: The Department of Defense's 2019 Demographics Report. No newer data on military installation headcounts is available. The Department of Defense stopped publishing disaggregated headcount data after 2019.")
# set wrapped caption width
installations_wrapped_caption <- paste(strwrap(installations_caption_text, width = 75), collapse = "\n")
# plot map
all_installations_map <- plot_usmap() +
geom_sf(
data = transformed_data,
aes(size = total_sponsors, color = service_branch),
alpha = 0.60
) +
labs(title = "Active Duty Personnel on U.S. Military Installations",
caption = installations_wrapped_caption) +
scale_color_manual(values = c("Navy" = "blue",
"Army" = "green",
"Marine Corps" = "red",
"Air Force" = "orange",
"DoD" = "purple"),
name = "Service Branch") +
scale_size_continuous(labels = comma,
name = "Installation Headcount") +
theme(plot.title = element_text(hjust = 0, size = 25),
legend.position = "left",
legend.direction = "vertical",
legend.box = "vertical",
legend.justification = "right",
legend.spacing.x = unit(0, "cm"),
legend.spacing.y = unit(0.1, "cm"),
legend.margin = margin(r = -100),
legend.text = element_text(size = 10),
legend.key.size = unit(2, "lines"),
# plot.caption = element_text(hjust = 0, margin = margin(t = 10, r = 0, b = 0, l = 0)),
plot.margin = margin(20, 20, 20, 20))
all_installations_map
# export map
ggsave(here("output", "all_installations_map.jpg"), plot = all_installations_map, width = 12, height = 9, dpi = 300)
# create copy of initial data frame
test_data1 <- test_data0
# make service_branch a factor variable
test_data1$service_branch <- as.factor(test_data1$service_branch)
# add column showing whether headcount is >= 2000
test_data1 <- test_data1 %>%
mutate(headcount_below_2000 = ifelse(total_sponsors < 2000, "Yes", "No"))
# create latitude and longitude columns from coordinates column
coordinates_split <- strsplit(as.character(test_data1$coordinates), ", ")
latitude <- sapply(coordinates_split, `[`, 1)
longitude <- sapply(coordinates_split, `[`, 2)
test_data1$latitude <- latitude
test_data1$longitude <- longitude
# change order of columns
test_data1 <- test_data1[, c("state", "base", "service_branch", "zip_code", "coordinates", "longitude", "latitude", "nmc", "miles_to_nmc", "headcount_below_2000", "total_sponsors", "total_spouses", "children0-5", "children6-11", "children12-18", "children19andup", "other_dependents", "total_personnel")]
# remove rows where base = Other
test_data2 <- test_data1[test_data1$base != "Other", ]
# remove rows where service_branch = DoD?
# make latitude and longitude columns numeric
# test_data2$latitude <- as.numeric(test_data2$latitude)
# test_data2$longitude <- as.numeric(test_data2$longitude)
# set number of decimal points equal to 6
test_data2$latitude <- format(test_data2$latitude, nsmall = 6)
test_data2$longitude <- format(test_data2$longitude, nsmall = 6)
# make latitude and longitude columns numeric
test_data2$latitude <- as.numeric(test_data2$latitude)
test_data2$longitude <- as.numeric(test_data2$longitude)
# transform values
transformed_data <- usmap_transform(test_data2, input_names = c("longitude", "latitude"), output_names = NULL)
# set caption text
installations_caption_text <- paste("Source: The Department of Defense's 2019 Demographics Report. No newer data on military installation headcounts is available. The Department of Defense stopped publishing disaggregated headcount data after 2019.")
# set wrapped caption width
installations_wrapped_caption <- paste(strwrap(installations_caption_text, width = 78), collapse = "\n")
# plot map
all_installations_map <- plot_usmap() +
geom_sf(
data = transformed_data,
aes(size = total_sponsors, color = service_branch),
alpha = 0.60
) +
labs(title = "Active Duty Personnel on U.S. Military Installations",
caption = installations_wrapped_caption) +
scale_color_manual(values = c("Navy" = "blue",
"Army" = "green",
"Marine Corps" = "red",
"Air Force" = "orange",
"DoD" = "purple"),
name = "Service Branch") +
scale_size_continuous(labels = comma,
name = "Installation Headcount") +
theme(plot.title = element_text(hjust = 0, size = 25),
legend.position = "left",
legend.direction = "vertical",
legend.box = "vertical",
legend.justification = "right",
legend.spacing.x = unit(0, "cm"),
legend.spacing.y = unit(0.1, "cm"),
legend.margin = margin(r = -100),
legend.text = element_text(size = 10),
legend.key.size = unit(2, "lines"),
# plot.caption = element_text(hjust = 0, margin = margin(t = 10, r = 0, b = 0, l = 0)),
plot.margin = margin(20, 20, 20, 20))
all_installations_map
# export map
ggsave(here("output", "all_installations_map.jpg"), plot = all_installations_map, width = 12, height = 9, dpi = 300)
