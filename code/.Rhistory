demos_change <- merge(demos_2019_1, demos_2022_1, by = "state", all = TRUE)
# create state abbreviation column
state_abbreviations <- c("AL", "AK", "AZ", "AR", "CA", "CO", "CT", "DC", "DE", "FL", "GA", "HI", "ID", "IL", "IN", "IA", "KS", "KY", "LA", "ME", "MD", "MA", "MI", "MN", "MS", "MO", "MT", "NE", "NV", "NH", "NJ", "NM", "NY", "NC", "ND", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VT", "VA", "WA", "WV", "WI", "WY")
demos_change <- cbind(demos_change[, 1], state_abbreviations, demos_change[, -1])
# fix column names
colnames(demos_change) <- c("state", "state_abbr", "total_sponsors_2019", "total_spouses_2019", "children0-5_2019", "children6-11_2019", "children12-18_2019", "children19-22_2019", "adult_dependents_2019", "total_dependents_2019", "total_personnel_2019", "total_children_2019", "total_sponsors_2022", "total_spouses_2022", "children0-5_2022", "children6-11_2022", "children12-18_2022", "children19-22_2022", "adult_dependents_2022", "total_dependents_2022", "total_personnel_2022", "total_children_2022")
# create change columns
demos_change$change_total_sponsors <- demos_change$total_sponsors_2022 - demos_change$total_sponsors_2019
demos_change$change_total_spouses <- demos_change$total_spouses_2022 - demos_change$total_spouses_2019
demos_change$change_total_children <- demos_change$total_children_2022 - demos_change$total_children_2019
demos_change$change_total_adult_dependents <- demos_change$adult_dependents_2022 - demos_change$adult_dependents_2019
demos_change$change_total_dependents <- demos_change$total_dependents_2022 - demos_change$total_dependents_2019
demos_change$change_total_personnel <- demos_change$total_personnel_2022 - demos_change$total_personnel_2019
# create percent change columns
demos_change$per_change_total_sponsors <- demos_change$change_total_sponsors / demos_change$total_sponsors_2019 * 100
demos_change$per_change_total_spouses <- demos_change$change_total_spouses / demos_change$total_spouses_2019 * 100
demos_change$per_change_total_children <- demos_change$change_total_children / demos_change$total_children_2019 * 100
demos_change$per_change_total_adult_dependents <- demos_change$change_total_adult_dependents / demos_change$adult_dependents_2019 * 100
demos_change$per_change_total_dependents <- demos_change$change_total_dependents / demos_change$total_dependents_2019 * 100
demos_change$per_change_total_personnel <- demos_change$change_total_personnel / demos_change$total_personnel_2019 * 100
# create only changes demographic data frame
only_demos_change <- demos_change[, c("state_abbr", "per_change_total_sponsors", "per_change_total_spouses", "per_change_total_children", "per_change_total_adult_dependents")]
# create long data frame
only_demos_change_long <- pivot_longer(only_demos_change,
cols = c(per_change_total_sponsors, per_change_total_spouses, per_change_total_children, per_change_total_adult_dependents),
names_to = "demo_group",
values_to = "percent_change")
# remove NA values
only_demos_change_long <- only_demos_change_long[!is.na(only_demos_change_long$percent_change), ]
# set caption
demo_caption_text <- paste("Sources: The Department of Defense's 2019 and 2022 Demographics Reports")
# set wrapped caption width
demo_wrapped_caption <- paste(strwrap(demo_caption_text, width = 40), collapse = "\n")
demo_change_plot <- ggplot(only_demos_change_long, aes(fill = demo_group, y = percent_change, x = state_abbr)) +
geom_bar(position="stack", stat="identity") +
theme_minimal() +
ggtitle("Percent Change in Personnel Demographics by State (2019 - 2022)") +
labs(fill = "Demographic Group",
caption = demo_wrapped_caption) +
ylab("Percent Change in Personnel") +
xlab("State") +
scale_fill_manual(values = c("per_change_total_sponsors" = "red", "per_change_total_spouses" = "blue", "per_change_total_children" = "purple", "per_change_total_adult_dependents" = "orange"),  # Specify colors and labels
labels = c("per_change_total_sponsors" = "Active Duty", "per_change_total_spouses" = "Spouses", "per_change_total_children" = "Children", "per_change_total_adult_dependents" = "Adult Dependents")) +
theme(plot.title = element_text(hjust = 0, size = 25),
axis.title.x = element_text(vjust = -2, size = 11),
axis.title.y = element_text(size = 11),
axis.text.x = element_text(size = 7),
axis.text.y = element_text(size = 8),
legend.position = "right",
legend.direction = "vertical",
legend.box = "vertical",
legend.justification = "right",
legend.spacing = unit(0.5, "cm"),
legend.margin = margin(r = -10),
legend.title = element_text(size = 11),
legend.text = element_text(size = 10),
legend.key.size = unit(1, "lines"),
plot.margin = margin(20, 30, 20, 20),
plot.caption = element_text(hjust = 1.2))
demo_change_plot
# export bar plot
ggsave(here("output", "demographic_change_bar.jpg"), plot = demo_change_plot, width = 12, height = 9, dpi = 300)
# set caption text
installations_rent_caption_text <- paste("Sources: The Department of Defense's 2019 Demographics Report and the U.S. Census Bureau's American Community Survey, 5-Year Data (2009-2022)")
# set wrapped caption width
installations_rent_wrapped_caption <- paste(strwrap(installations_rent_caption_text, width = 78), collapse = "\n")
# plot map
all_installations_rent_map <- plot_usmap() +
geom_sf(
data = transformed_data,
aes(size = total_sponsors, color = median_contract_rent),
alpha = 0.60
) +
labs(title = "Median Contract Rent Around U.S. Military Installations (2022)",
subtitle = "Installation headcount data is from 2019. County-level rental data is from 2022.",
caption = installations_rent_wrapped_caption) +
scale_color_continuous(name = "Median Contract Rent",
label = scales::dollar_format(),
low = "yellow", high = "red") +
scale_size_continuous(labels = comma,
name = "Installation Headcount") +
theme(plot.title = element_text(hjust = 0, size = 25),
legend.position = "left",
legend.direction = "vertical",
legend.box = "vertical",
legend.justification = "right",
legend.spacing = unit(0.5, "cm"),
legend.margin = margin(r = -120),
legend.title = element_text(size = 11),
legend.text = element_text(size = 10),
legend.key.size = unit(1, "lines"),
plot.margin = margin(20, 20, 20, 20))
all_installations_rent_map
# export map
ggsave(here("output", "all_installations_rent_map.jpg"), plot = all_installations_rent_map, width = 12, height = 9, dpi = 300)
# plot map
small_installations_rent_map <- plot_usmap() +
geom_sf(
data = small_installations,
aes(size = total_sponsors, color = median_contract_rent),
alpha = 0.60
) +
labs(title = "Median Contract Rent Around Small U.S. Military Installations (2022)",
subtitle = "Installation headcount data is from 2019. County-level rental data is from 2022.",
caption = installations_rent_wrapped_caption) +
scale_color_continuous(name = "Median Contract Rent",
label = scales::dollar_format(),
low = "yellow", high = "red") +
scale_size_continuous(labels = comma,
name = "Installation Headcount") +
theme(plot.title = element_text(hjust = 0, size = 25),
legend.position = "left",
legend.direction = "vertical",
legend.box = "vertical",
legend.justification = "right",
legend.spacing = unit(0.5, "cm"),
legend.margin = margin(r = -120),
legend.title = element_text(size = 11),
legend.text = element_text(size = 10),
legend.key.size = unit(1, "lines"),
plot.margin = margin(20, 20, 20, 20))
small_installations_rent_map
# export map
ggsave(here("output", "small_installations_rent_map.jpg"), plot = small_installations_rent_map, width = 12, height = 9, dpi = 300)
# arrange by descending median contract rent
transformed_data <- arrange(transformed_data, desc(median_contract_rent))
small_installations <- arrange(small_installations, desc(median_contract_rent))
# export as csv or xlsx? (still need to set save location to output folder)
#write.csv(transformed_data, "all_installations.csv", row.names = FALSE)
#write.csv(small_installations, "small_installations.csv", row.names = FALSE)
# filter by presence and absence of services
all_installation_candidates <- transformed_data[transformed_data$personal_financial_management == "NO" & (transformed_data$chaplains == "YES" | transformed_data$family_support_center == "YES" | transformed_data$morale_welfare_recreation == "YES"), ]
small_installation_candidates <- small_installations[small_installations$personal_financial_management == "NO" & (small_installations$chaplains == "YES" | small_installations$family_support_center == "YES" | small_installations$morale_welfare_recreation == "YES"), ]
# remove NA rows
all_installation_candidates <- all_installation_candidates[!is.na(all_installation_candidates$family_support_center), ]
small_installation_candidates <- small_installation_candidates[!is.na(small_installation_candidates$family_support_center), ]
# filter by presence and absence of services
all_installation_candidates2 <- transformed_data[transformed_data$personal_financial_management == "NO", ]
small_installation_candidates2 <- small_installations[small_installations$personal_financial_management == "NO", ]
# set caption text
installation_candidates_caption_text <- paste("placeholder")
# set wrapped caption width
installation_candidates_wrapped_caption <- paste(strwrap(installation_candidates_caption_text, width = 78), collapse = "\n")
# plot map
all_installation_candidates_map <- plot_usmap() +
geom_sf(
data = all_installation_candidates2,
aes(size = total_sponsors, color = service_branch),
alpha = 0.60
) +
geom_label_repel(data = all_installation_candidates2,
aes(label = base, geometry = geometry),
size = 3, alpha = 0.8,
label.r = unit(0.5, "lines"), label.size = 0.5,
segment.color = "red", segment.size = 1,
stat = "sf_coordinates", seed = 1002,
max.overlaps = 20) +
labs(title = "placeholder",
caption = installation_candidates_wrapped_caption) +
scale_color_manual(values = c("Navy" = "blue",
"Army" = "green",
"Marine Corps" = "red",
"Air Force" = "orange",
"DOD" = "purple"),
name = "Service Branch") +
scale_size_continuous(labels = comma,
name = "Installation Headcount") +
theme(plot.title = element_text(hjust = 0, size = 25),
legend.position = "left",
legend.direction = "vertical",
legend.box = "vertical",
legend.justification = "right",
legend.spacing = unit(0.5, "cm"),
legend.margin = margin(r = -120),
legend.title = element_text(size = 11),
legend.text = element_text(size = 10),
legend.key.size = unit(1, "lines"),
plot.margin = margin(20, 20, 20, 20))
all_installation_candidates_map
# export map
ggsave(here("output", "all_installation_candidates_map.jpg"), plot = all_installation_candidates_map, width = 12, height = 9, dpi = 300)
# set caption
contracts_caption_text <- paste("Source: USAspending.gov")
# set wrapped caption width
contracts_wrapped_caption <- paste(strwrap(contracts_caption_text, width = 100), collapse = "\n")
# create discrete colors
color_palette <- colorRampPalette(c("lightblue", "purple"))(4)
# create stacked bar graph
contracts_bar <- ggplot(contracts2, aes(x = award_base_action_date_fiscal_year, y = total_obligated_amount, fill = contract_group)) +
geom_bar(position="stack", stat="identity") +
theme_minimal() +
labs(title = "DOD-Funded Financial Readiness* Contracts (Aggregated by Size)",
subtitle = "* Contract search terms included financial readiness, financial education, financial literacy, and financial training.",
caption = contracts_wrapped_caption,
fill = "Contract Size") +
ylab("Obligated Funds") +
xlab("Fiscal Year") +
scale_y_continuous(labels = label_dollar()) +
scale_fill_manual(values = c(
"$1,000,000 & Under" = color_palette[1],
"$1,000,001 - $25,000,000" = color_palette[2],
"$25,000,001 - $100,000,000" = color_palette[3],
"$100,000,001 - $500,000,000" = color_palette[4],
"$500,000,001 & Above" = "red")) +
theme(plot.title = element_text(hjust = 0, size = 25),
axis.title.x = element_text(size = 11, vjust = 8),
axis.title.y = element_text(size = 11, margin = margin(r = 15)),
axis.text.x = element_text(size = 8, vjust = 15),
axis.text.y = element_text(size = 8),
panel.grid.major.x = element_blank(),
legend.position = "right",
legend.direction = "vertical",
legend.box = "vertical",
legend.justification = "right",
legend.spacing = unit(0.5, "cm"),
legend.margin = margin(r = -10),
legend.title = element_text(size = 11),
legend.text = element_text(size = 10),
legend.key.size = unit(1, "lines"),
plot.margin = margin(20, 20, 20, 20),
plot.caption = element_text(hjust = 1.3))
contracts_bar
# export bar plot
ggsave(here("output", "contracts_bar.jpg"), plot = contracts_bar, width = 12, height = 9, dpi = 300)
# plot all contracts map
contracts_map <- plot_usmap(regions = "counties", data = contracts3, values = "total_obligated_amount_sum", labels = FALSE) +
labs(title = "Total DOD Financial Readiness* Contract Funding (2006 - 2023)",
subtitle = "* Contract search terms included financial readiness, financial education, financial literacy, and financial training.",
caption = contracts_caption_text) +
scale_fill_continuous(low = "lightblue", high = "purple", name = "Total Obligated Funds", label = scales::dollar_format()) +
theme(plot.title = element_text(hjust = 0, size = 25),
legend.position = "left",
legend.direction = "vertical",
legend.box = "vertical",
legend.justification = "right",
legend.spacing = unit(0.5, "cm"),
legend.margin = margin(r = -130),
legend.title = element_text(size = 11),
legend.text = element_text(size = 10),
legend.key.size = unit(1, "lines"),
plot.margin = margin(20, 20, 20, 20))
contracts_map
# export map
ggsave(here("output", "contracts_map.jpg"), plot = contracts_map, width = 12, height = 9, dpi = 300)
# plot all contracts map
small_contracts_map <- plot_usmap(regions = "counties", data = contracts3_small, values = "total_obligated_amount_sum", labels = FALSE) +
labs(title = "Total DOD Financial Readiness Small Contract* Funding (2006 - 2023)",
subtitle = "* Small contracts are defined as those with $1,000,000 or less in obligated funds.",
caption = contracts_caption_text) +
scale_fill_continuous(low = "lightblue", high = "purple", name = "Total Obligated Funds", label = scales::dollar_format()) +
theme(plot.title = element_text(hjust = 0, size = 25),
legend.position = "left",
legend.direction = "vertical",
legend.box = "vertical",
legend.justification = "right",
legend.spacing = unit(0.5, "cm"),
legend.margin = margin(r = -130),
legend.title = element_text(size = 11),
legend.text = element_text(size = 10),
legend.key.size = unit(1, "lines"),
plot.margin = margin(20, 20, 20, 20))
small_contracts_map
# export map
ggsave(here("output", "small_contracts_map.jpg"), plot = small_contracts_map, width = 12, height = 9, dpi = 300)
# set caption text
installations_rent_caption_text <- paste("Sources: The Department of Defense's 2019 Demographics Report and the U.S. Census Bureau's American Community Survey, 5-Year Data (2009-2022)")
# set wrapped caption width
installations_rent_wrapped_caption <- paste(strwrap(installations_rent_caption_text, width = 78), collapse = "\n")
# plot map
all_installations_contracts_map <- plot_usmap() +
geom_sf(
data = transformed_data2,
aes(size = total_sponsors, color = total_obligated_amount_sum),
alpha = 0.60
) +
labs(title = "Median Contract Rent Around U.S. Military Installations (2022)",
subtitle = "Installation headcount data is from 2019. County-level rental data is from 2022.",
caption = installations_rent_wrapped_caption) +
scale_color_continuous(name = "Median Contract Rent",
label = scales::dollar_format(),
low = "lightblue", high = "purple") +
scale_size_continuous(labels = comma,
name = "Installation Headcount") +
theme(plot.title = element_text(hjust = 0, size = 25),
legend.position = "left",
legend.direction = "vertical",
legend.box = "vertical",
legend.justification = "right",
legend.spacing = unit(0.5, "cm"),
legend.margin = margin(r = -120),
legend.title = element_text(size = 11),
legend.text = element_text(size = 10),
legend.key.size = unit(1, "lines"),
plot.margin = margin(20, 20, 20, 20))
all_installations_contracts_map
# export map
ggsave(here("output", "all_installations_contracts_map.jpg"), plot = all_installations_contracts_map, width = 12, height = 9, dpi = 300)
# set caption
contracts_caption_text <- paste("Source: USAspending.gov")
# set wrapped caption width
contracts_wrapped_caption <- paste(strwrap(contracts_caption_text, width = 100), collapse = "\n")
# create discrete colors
color_palette <- colorRampPalette(c("lightblue", "purple"))(2)
# create stacked bar graph
contracts_bar <- ggplot(contracts2, aes(x = award_base_action_date_fiscal_year, y = total_obligated_amount, fill = contract_group)) +
geom_bar(position="stack", stat="identity") +
theme_minimal() +
labs(title = "DOD-Funded Financial Readiness* Contracts (Aggregated by Size)",
subtitle = "* Contract search terms included financial readiness, financial education, financial literacy, and financial training.",
caption = contracts_wrapped_caption,
fill = "Contract Size") +
ylab("Obligated Funds") +
xlab("Fiscal Year") +
scale_y_continuous(labels = label_dollar()) +
scale_fill_manual(values = c(
"$1,000,000 & Under" = color_palette[1],
"$1,000,001 - $25,000,000" = color_palette[2],
"$25,000,001 - $100,000,000" = color_palette[3],
"$100,000,001 - $500,000,000" = color_palette[4],
"$500,000,001 & Above" = "red")) +
theme(plot.title = element_text(hjust = 0, size = 25),
axis.title.x = element_text(size = 11, vjust = 8),
axis.title.y = element_text(size = 11, margin = margin(r = 15)),
axis.text.x = element_text(size = 8, vjust = 15),
axis.text.y = element_text(size = 8),
panel.grid.major.x = element_blank(),
legend.position = "right",
legend.direction = "vertical",
legend.box = "vertical",
legend.justification = "right",
legend.spacing = unit(0.5, "cm"),
legend.margin = margin(r = -10),
legend.title = element_text(size = 11),
legend.text = element_text(size = 10),
legend.key.size = unit(1, "lines"),
plot.margin = margin(20, 20, 20, 20),
plot.caption = element_text(hjust = 1.3))
contracts_bar
# export bar plot
ggsave(here("output", "contracts_bar.jpg"), plot = contracts_bar, width = 12, height = 9, dpi = 300)
# set caption
contracts_caption_text <- paste("Source: USAspending.gov")
# set wrapped caption width
contracts_wrapped_caption <- paste(strwrap(contracts_caption_text, width = 100), collapse = "\n")
# create discrete colors
color_palette <- colorRampPalette(c("lightblue", "purple"))(3)
# create stacked bar graph
contracts_bar <- ggplot(contracts2, aes(x = award_base_action_date_fiscal_year, y = total_obligated_amount, fill = contract_group)) +
geom_bar(position="stack", stat="identity") +
theme_minimal() +
labs(title = "DOD-Funded Financial Readiness* Contracts (Aggregated by Size)",
subtitle = "* Contract search terms included financial readiness, financial education, financial literacy, and financial training.",
caption = contracts_wrapped_caption,
fill = "Contract Size") +
ylab("Obligated Funds") +
xlab("Fiscal Year") +
scale_y_continuous(labels = label_dollar()) +
scale_fill_manual(values = c(
"$1,000,000 & Under" = color_palette[1],
"$1,000,001 - $25,000,000" = color_palette[2],
"$25,000,001 - $100,000,000" = color_palette[3],
"$100,000,001 - $500,000,000" = color_palette[4],
"$500,000,001 & Above" = "red")) +
theme(plot.title = element_text(hjust = 0, size = 25),
axis.title.x = element_text(size = 11, vjust = 8),
axis.title.y = element_text(size = 11, margin = margin(r = 15)),
axis.text.x = element_text(size = 8, vjust = 15),
axis.text.y = element_text(size = 8),
panel.grid.major.x = element_blank(),
legend.position = "right",
legend.direction = "vertical",
legend.box = "vertical",
legend.justification = "right",
legend.spacing = unit(0.5, "cm"),
legend.margin = margin(r = -10),
legend.title = element_text(size = 11),
legend.text = element_text(size = 10),
legend.key.size = unit(1, "lines"),
plot.margin = margin(20, 20, 20, 20),
plot.caption = element_text(hjust = 1.3))
contracts_bar
# export bar plot
ggsave(here("output", "contracts_bar.jpg"), plot = contracts_bar, width = 12, height = 9, dpi = 300)
# set caption
contracts_caption_text <- paste("Source: USAspending.gov")
# set wrapped caption width
contracts_wrapped_caption <- paste(strwrap(contracts_caption_text, width = 100), collapse = "\n")
# create discrete colors
color_palette <- colorRampPalette(c("lightblue", "purple"))(4)
# create stacked bar graph
contracts_bar <- ggplot(contracts2, aes(x = award_base_action_date_fiscal_year, y = total_obligated_amount, fill = contract_group)) +
geom_bar(position="stack", stat="identity") +
theme_minimal() +
labs(title = "DOD-Funded Financial Readiness* Contracts (Aggregated by Size)",
subtitle = "* Contract search terms included financial readiness, financial education, financial literacy, and financial training.",
caption = contracts_wrapped_caption,
fill = "Contract Size") +
ylab("Obligated Funds") +
xlab("Fiscal Year") +
scale_y_continuous(labels = label_dollar()) +
scale_fill_manual(values = c(
"$1,000,000 & Under" = color_palette[1],
"$1,000,001 - $25,000,000" = color_palette[2],
"$25,000,001 - $100,000,000" = color_palette[3],
"$100,000,001 - $500,000,000" = color_palette[4],
"$500,000,001 & Above" = "red")) +
theme(plot.title = element_text(hjust = 0, size = 25),
axis.title.x = element_text(size = 11, vjust = 8),
axis.title.y = element_text(size = 11, margin = margin(r = 15)),
axis.text.x = element_text(size = 8, vjust = 15),
axis.text.y = element_text(size = 8),
panel.grid.major.x = element_blank(),
legend.position = "right",
legend.direction = "vertical",
legend.box = "vertical",
legend.justification = "right",
legend.spacing = unit(0.5, "cm"),
legend.margin = margin(r = -10),
legend.title = element_text(size = 11),
legend.text = element_text(size = 10),
legend.key.size = unit(1, "lines"),
plot.margin = margin(20, 20, 20, 20),
plot.caption = element_text(hjust = 1.3))
contracts_bar
# export bar plot
ggsave(here("output", "contracts_bar.jpg"), plot = contracts_bar, width = 12, height = 9, dpi = 300)
# set caption
contracts_caption_text <- paste("Source: USAspending.gov")
# set wrapped caption width
contracts_wrapped_caption <- paste(strwrap(contracts_caption_text, width = 100), collapse = "\n")
# create discrete colors
color_palette <- colorRampPalette(c("lightblue", "purple"))(3)
# create stacked bar graph
contracts_bar <- ggplot(contracts2, aes(x = award_base_action_date_fiscal_year, y = total_obligated_amount, fill = contract_group)) +
geom_bar(position="stack", stat="identity") +
theme_minimal() +
labs(title = "DOD-Funded Financial Readiness* Contracts (Aggregated by Size)",
subtitle = "* Contract search terms included financial readiness, financial education, financial literacy, and financial training.",
caption = contracts_wrapped_caption,
fill = "Contract Size") +
ylab("Obligated Funds") +
xlab("Fiscal Year") +
scale_y_continuous(labels = label_dollar()) +
scale_fill_manual(values = c(
"$1,000,000 & Under" = color_palette[1],
"$1,000,001 - $25,000,000" = color_palette[2],
"$25,000,001 - $100,000,000" = color_palette[3],
"$100,000,001 - $500,000,000" = color_palette[4],
"$500,000,001 & Above" = "red")) +
theme(plot.title = element_text(hjust = 0, size = 25),
axis.title.x = element_text(size = 11, vjust = 8),
axis.title.y = element_text(size = 11, margin = margin(r = 15)),
axis.text.x = element_text(size = 8, vjust = 15),
axis.text.y = element_text(size = 8),
panel.grid.major.x = element_blank(),
legend.position = "right",
legend.direction = "vertical",
legend.box = "vertical",
legend.justification = "right",
legend.spacing = unit(0.5, "cm"),
legend.margin = margin(r = -10),
legend.title = element_text(size = 11),
legend.text = element_text(size = 10),
legend.key.size = unit(1, "lines"),
plot.margin = margin(20, 20, 20, 20),
plot.caption = element_text(hjust = 1.3))
contracts_bar
# export bar plot
ggsave(here("output", "contracts_bar.jpg"), plot = contracts_bar, width = 12, height = 9, dpi = 300)
# set caption
contracts_caption_text <- paste("Source: USAspending.gov")
# set wrapped caption width
contracts_wrapped_caption <- paste(strwrap(contracts_caption_text, width = 100), collapse = "\n")
# create discrete colors
color_palette <- colorRampPalette(c("lightblue", "purple"))(4)
# create stacked bar graph
contracts_bar <- ggplot(contracts2, aes(x = award_base_action_date_fiscal_year, y = total_obligated_amount, fill = contract_group)) +
geom_bar(position="stack", stat="identity") +
theme_minimal() +
labs(title = "DOD-Funded Financial Readiness* Contracts (Aggregated by Size)",
subtitle = "* Contract search terms included financial readiness, financial education, financial literacy, and financial training.",
caption = contracts_wrapped_caption,
fill = "Contract Size") +
ylab("Obligated Funds") +
xlab("Fiscal Year") +
scale_y_continuous(labels = label_dollar()) +
scale_fill_manual(values = c(
"$1,000,000 & Under" = color_palette[1],
"$1,000,001 - $25,000,000" = color_palette[2],
"$25,000,001 - $100,000,000" = color_palette[3],
"$100,000,001 - $500,000,000" = color_palette[4],
"$500,000,001 & Above" = "red")) +
theme(plot.title = element_text(hjust = 0, size = 25),
axis.title.x = element_text(size = 11, vjust = 8),
axis.title.y = element_text(size = 11, margin = margin(r = 15)),
axis.text.x = element_text(size = 8, vjust = 15),
axis.text.y = element_text(size = 8),
panel.grid.major.x = element_blank(),
legend.position = "right",
legend.direction = "vertical",
legend.box = "vertical",
legend.justification = "right",
legend.spacing = unit(0.5, "cm"),
legend.margin = margin(r = -10),
legend.title = element_text(size = 11),
legend.text = element_text(size = 10),
legend.key.size = unit(1, "lines"),
plot.margin = margin(20, 20, 20, 20),
plot.caption = element_text(hjust = 1.3))
contracts_bar
# export bar plot
ggsave(here("output", "contracts_bar.jpg"), plot = contracts_bar, width = 12, height = 9, dpi = 300)
