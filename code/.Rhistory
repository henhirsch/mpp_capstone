# remove first row
median_rent1 <- median_rent0[-1, ]
# remove null rows
median_rent1 <- median_rent1[median_rent1$margin != "**", ]
median_rent1 <- median_rent1[median_rent1$margin != "***", ]
# remove unneeded columns
median_rent1 <- subset(median_rent1, select = -c(margin, X))
# turn geo_id into county fips codes
median_rent1$fips <- substr(median_rent1$fips, nchar(median_rent1$fips) - 4, nchar(median_rent1$fips))
# convert median_contract_rent column to numeric
median_rent1$median_contract_rent <- as.numeric(median_rent1$median_contract_rent)
master_data2 <- merge(master_data2, median_rent1, by = "fips", all.x = TRUE)
# remove rows with NA values in county column
# master_data2 <- master_data2[!is.na(master_data2$county), ]
# transform values
transformed_data <- usmap_transform(master_data2, input_names = c("longitude", "latitude"), output_names = NULL)
# set caption text
installations_caption_text <- paste("Source: The Department of Defense's 2019 Demographics Report. No newer data on military installation headcounts is available. The Department of Defense stopped publishing disaggregated headcount data after 2019.")
# set wrapped caption width
installations_wrapped_caption <- paste(strwrap(installations_caption_text, width = 78), collapse = "\n")
# plot map
all_installations_map <- plot_usmap() +
geom_sf(
data = transformed_data,
aes(size = total_sponsors, color = service_branch),
alpha = 0.60
) +
labs(title = "Active Duty Personnel on U.S. Military Installations (2019)",
caption = installations_wrapped_caption) +
scale_color_manual(values = c("Navy" = "blue",
"Army" = "green",
"Marine Corps" = "red",
"Air Force" = "orange",
"DOD" = "purple"),
name = "Service Branch") +
scale_size_continuous(labels = comma,
name = "Installation Headcount") +
theme(plot.title = element_text(hjust = 0, size = 25),
legend.position = "left",
legend.direction = "vertical",
legend.box = "vertical",
legend.justification = "right",
legend.spacing = unit(0.5, "cm"),
legend.margin = margin(r = -120),
legend.title = element_text(size = 11),
legend.text = element_text(size = 10),
legend.key.size = unit(1, "lines"),
plot.margin = margin(20, 20, 20, 20))
all_installations_map
# export map
ggsave(here("output", "all_installations_map.jpg"), plot = all_installations_map, width = 12, height = 9, dpi = 300)
# create small installations data frame
small_installations <- transformed_data[transformed_data$headcount_below_2000 == "Yes", ]
# plot map
small_installations_map <- plot_usmap() +
geom_sf(
data = small_installations,
aes(size = total_sponsors, color = service_branch),
alpha = 0.60
) +
labs(title = "Active Duty Personnel on Small U.S. Military Installations (2019)",
subtitle = "Small installations are defined as those with headcounts below 2,000.",
caption = installations_wrapped_caption) +
scale_color_manual(values = c("Navy" = "blue",
"Army" = "green",
"Marine Corps" = "red",
"Air Force" = "orange",
"DOD" = "purple"),
name = "Service Branch") +
scale_size_continuous(labels = comma,
name = "Installation Headcount") +
theme(plot.title = element_text(hjust = 0, size = 25),
legend.position = "left",
legend.direction = "vertical",
legend.box = "vertical",
legend.justification = "right",
legend.spacing = unit(0.5, "cm"),
legend.margin = margin(r = -120),
legend.title = element_text(size = 11),
legend.text = element_text(size = 10),
legend.key.size = unit(1, "lines"),
plot.margin = margin(20, 20, 20, 20))
small_installations_map
# export map
ggsave(here("output", "small_installations_map.jpg"), plot = small_installations_map, width = 12, height = 9, dpi = 300)
# set subtitle
rent_subtitle_text <- "The American Community Survey defines contract rent as the monthly rent agreed to or contracted for, regardless of any furnishings, utilities, fees, meals, or services that may be included."
wrapped_rent_subtitle <- str_wrap(rent_subtitle_text, width = 100)
# set caption
rent_caption_text <- paste("Source: The U.S. Census Bureau's American Community Survey, 5-Year Data (2009-2022)")
# set wrapped caption width
rent_wrapped_caption <- paste(strwrap(rent_caption_text, width = 45), collapse = "\n")
# plot rent map
rent_map <- plot_usmap(regions = "counties", data = median_rent1, values = "median_contract_rent", labels = FALSE) +
labs(title = "Median Contract Rent by County (2022)",
subtitle = wrapped_rent_subtitle,
caption = rent_wrapped_caption) +
scale_fill_continuous(low = "yellow", high = "red", name = "Median Contract Rent", label = scales::dollar_format()) +
theme(plot.title = element_text(hjust = 0, size = 25),
legend.position = "left",
legend.direction = "vertical",
legend.box = "vertical",
legend.justification = "right",
legend.spacing = unit(0.5, "cm"),
legend.margin = margin(r = -130),
legend.title = element_text(size = 11),
legend.text = element_text(size = 10),
legend.key.size = unit(1, "lines"),
plot.margin = margin(20, 20, 20, 20))
rent_map
# export map
ggsave(here("output", "rent_map.jpg"), plot = rent_map, width = 12, height = 9, dpi = 300)
# create duplicate data frames
demos_2019_1 <- demos_2019_0
demos_2022_1 <- demos_2022_0
# add years to column names for both data frames
colnames(demos_2019_1) <- c("state", "total_sponsors_2019", "total_spouses_2019", "children0-5_2019", "children6-11_2019", "children12-18_2019", "children19-22_2019", "adult_dependents_2019", "total_dependents_2019", "total_personnel_2019")
colnames(demos_2022_1) <- c("state", "total_sponsors_2022", "total_spouses_2022", "children0-5_2022", "children6-11_2022", "children12-18_2022", "children19-22_2022", "adult_dependents_2022", "total_dependents_2022", "total_personnel_2022")
# create total_children columns
demos_2019_1$total_children_2019 <- rowSums(demos_2019_1[, c("children0-5_2019", "children6-11_2019", "children12-18_2019", "children19-22_2019")], na.rm = TRUE)
demos_2022_1$total_children_2022 <- rowSums(demos_2022_1[, c("children0-5_2022", "children6-11_2022", "children12-18_2022", "children19-22_2022")], na.rm = TRUE)
# merge both data frames
demos_change <- merge(demos_2019_1, demos_2022_1, by = "state", all = TRUE)
# create state abbreviation column
state_abbreviations <- c("AL", "AK", "AZ", "AR", "CA", "CO", "CT", "DC", "DE", "FL", "GA", "HI", "ID", "IL", "IN", "IA", "KS", "KY", "LA", "ME", "MD", "MA", "MI", "MN", "MS", "MO", "MT", "NE", "NV", "NH", "NJ", "NM", "NY", "NC", "ND", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VT", "VA", "WA", "WV", "WI", "WY")
demos_change <- cbind(demos_change[, 1], state_abbreviations, demos_change[, -1])
# fix column names
colnames(demos_change) <- c("state", "state_abbr", "total_sponsors_2019", "total_spouses_2019", "children0-5_2019", "children6-11_2019", "children12-18_2019", "children19-22_2019", "adult_dependents_2019", "total_dependents_2019", "total_personnel_2019", "total_children_2019", "total_sponsors_2022", "total_spouses_2022", "children0-5_2022", "children6-11_2022", "children12-18_2022", "children19-22_2022", "adult_dependents_2022", "total_dependents_2022", "total_personnel_2022", "total_children_2022")
# create change columns
demos_change$change_total_sponsors <- demos_change$total_sponsors_2022 - demos_change$total_sponsors_2019
demos_change$change_total_spouses <- demos_change$total_spouses_2022 - demos_change$total_spouses_2019
demos_change$change_total_children <- demos_change$total_children_2022 - demos_change$total_children_2019
demos_change$change_total_adult_dependents <- demos_change$adult_dependents_2022 - demos_change$adult_dependents_2019
demos_change$change_total_dependents <- demos_change$total_dependents_2022 - demos_change$total_dependents_2019
demos_change$change_total_personnel <- demos_change$total_personnel_2022 - demos_change$total_personnel_2019
# create percent change columns
demos_change$per_change_total_sponsors <- demos_change$change_total_sponsors / demos_change$total_sponsors_2019 * 100
demos_change$per_change_total_spouses <- demos_change$change_total_spouses / demos_change$total_spouses_2019 * 100
demos_change$per_change_total_children <- demos_change$change_total_children / demos_change$total_children_2019 * 100
demos_change$per_change_total_adult_dependents <- demos_change$change_total_adult_dependents / demos_change$adult_dependents_2019 * 100
demos_change$per_change_total_dependents <- demos_change$change_total_dependents / demos_change$total_dependents_2019 * 100
demos_change$per_change_total_personnel <- demos_change$change_total_personnel / demos_change$total_personnel_2019 * 100
# create only changes demographic data frame
only_demos_change <- demos_change[, c("state_abbr", "per_change_total_sponsors", "per_change_total_spouses", "per_change_total_children", "per_change_total_adult_dependents")]
# create long data frame
only_demos_change_long <- pivot_longer(only_demos_change,
cols = c(per_change_total_sponsors, per_change_total_spouses, per_change_total_children, per_change_total_adult_dependents),
names_to = "demo_group",
values_to = "percent_change")
# remove NA values
only_demos_change_long <- only_demos_change_long[!is.na(only_demos_change_long$percent_change), ]
# set caption
demo_caption_text <- paste("Sources: The Department of Defense's 2019 and 2022 Demographics Reports")
# set wrapped caption width
demo_wrapped_caption <- paste(strwrap(demo_caption_text, width = 40), collapse = "\n")
demo_change_plot <- ggplot(only_demos_change_long, aes(fill = demo_group, y = percent_change, x = state_abbr)) +
geom_bar(position="stack", stat="identity") +
theme_minimal() +
ggtitle("Percent Change in Personnel Demographics by State (2019 - 2022)") +
labs(fill = "Demographic Group",
caption = demo_wrapped_caption) +
ylab("Percent Change in Personnel") +
xlab("State") +
scale_fill_manual(values = c("per_change_total_sponsors" = "red", "per_change_total_spouses" = "blue", "per_change_total_children" = "purple", "per_change_total_adult_dependents" = "orange"),  # Specify colors and labels
labels = c("per_change_total_sponsors" = "Active Duty", "per_change_total_spouses" = "Spouses", "per_change_total_children" = "Children", "per_change_total_adult_dependents" = "Adult Dependents")) +
theme(plot.title = element_text(hjust = 0, size = 25),
axis.title.x = element_text(vjust = -2, size = 11),
axis.title.y = element_text(size = 11),
axis.text.x = element_text(size = 7),
axis.text.y = element_text(size = 8),
legend.position = "right",
legend.direction = "vertical",
legend.box = "vertical",
legend.justification = "right",
legend.spacing = unit(0.5, "cm"),
legend.margin = margin(r = -10),
legend.title = element_text(size = 11),
legend.text = element_text(size = 10),
legend.key.size = unit(1, "lines"),
plot.margin = margin(20, 30, 20, 20),
plot.caption = element_text(hjust = 1.2))
demo_change_plot
# export bar plot
ggsave(here("output", "demographic_change_bar.jpg"), plot = demo_change_plot, width = 12, height = 9, dpi = 300)
# set caption text
installations_rent_caption_text <- paste("Sources: The Department of Defense's 2019 Demographics Report and the U.S. Census Bureau's American Community Survey, 5-Year Data (2009-2022)")
# set wrapped caption width
installations_rent_wrapped_caption <- paste(strwrap(installations_rent_caption_text, width = 78), collapse = "\n")
# plot map
all_installations_rent_map <- plot_usmap() +
geom_sf(
data = transformed_data,
aes(size = total_sponsors, color = median_contract_rent),
alpha = 0.60
) +
labs(title = "Median Contract Rent Around U.S. Military Installations (2022)",
subtitle = "Installation headcount data is from 2019. County-level rental data is from 2022.",
caption = installations_rent_wrapped_caption) +
scale_color_continuous(name = "Median Contract Rent",
label = scales::dollar_format(),
low = "yellow", high = "red") +
scale_size_continuous(labels = comma,
name = "Installation Headcount") +
theme(plot.title = element_text(hjust = 0, size = 25),
legend.position = "left",
legend.direction = "vertical",
legend.box = "vertical",
legend.justification = "right",
legend.spacing = unit(0.5, "cm"),
legend.margin = margin(r = -120),
legend.title = element_text(size = 11),
legend.text = element_text(size = 10),
legend.key.size = unit(1, "lines"),
plot.margin = margin(20, 20, 20, 20))
all_installations_rent_map
# export map
ggsave(here("output", "all_installations_rent_map.jpg"), plot = all_installations_rent_map, width = 12, height = 9, dpi = 300)
# plot map
small_installations_rent_map <- plot_usmap() +
geom_sf(
data = small_installations,
aes(size = total_sponsors, color = median_contract_rent),
alpha = 0.60
) +
labs(title = "Median Contract Rent Around Small U.S. Military Installations (2022)",
subtitle = "Installation headcount data is from 2019. County-level rental data is from 2022.",
caption = installations_rent_wrapped_caption) +
scale_color_continuous(name = "Median Contract Rent",
label = scales::dollar_format(),
low = "yellow", high = "red") +
scale_size_continuous(labels = comma,
name = "Installation Headcount") +
theme(plot.title = element_text(hjust = 0, size = 25),
legend.position = "left",
legend.direction = "vertical",
legend.box = "vertical",
legend.justification = "right",
legend.spacing = unit(0.5, "cm"),
legend.margin = margin(r = -120),
legend.title = element_text(size = 11),
legend.text = element_text(size = 10),
legend.key.size = unit(1, "lines"),
plot.margin = margin(20, 20, 20, 20))
small_installations_rent_map
# export map
ggsave(here("output", "small_installations_rent_map.jpg"), plot = small_installations_rent_map, width = 12, height = 9, dpi = 300)
# arrange by descending median contract rent
transformed_data <- arrange(transformed_data, desc(median_contract_rent))
small_installations <- arrange(small_installations, desc(median_contract_rent))
# export as csv or xlsx? (still need to set save location to output folder)
#write.csv(transformed_data, "all_installations.csv", row.names = FALSE)
#write.csv(small_installations, "small_installations.csv", row.names = FALSE)
# filter by presence and absence of services
all_installation_candidates <- transformed_data[transformed_data$personal_financial_management == "NO" & (transformed_data$chaplains == "YES" | transformed_data$family_support_center == "YES" | transformed_data$morale_welfare_recreation == "YES"), ]
small_installation_candidates <- small_installations[small_installations$personal_financial_management == "NO" & (small_installations$chaplains == "YES" | small_installations$family_support_center == "YES" | small_installations$morale_welfare_recreation == "YES"), ]
# remove NA rows
all_installation_candidates <- all_installation_candidates[!is.na(all_installation_candidates$family_support_center), ]
small_installation_candidates <- small_installation_candidates[!is.na(small_installation_candidates$family_support_center), ]
# filter by presence and absence of services
all_installation_candidates2 <- transformed_data[transformed_data$personal_financial_management == "NO", ]
small_installation_candidates2 <- small_installations[small_installations$personal_financial_management == "NO", ]
# set caption text
installation_candidates_caption_text <- paste("placeholder")
# set wrapped caption width
installation_candidates_wrapped_caption <- paste(strwrap(installation_candidates_caption_text, width = 78), collapse = "\n")
# plot map
all_installation_candidates_map <- plot_usmap() +
geom_sf(
data = all_installation_candidates2,
aes(size = total_sponsors, color = service_branch),
alpha = 0.60
) +
geom_label_repel(data = all_installation_candidates2,
aes(label = base, geometry = geometry),
size = 3, alpha = 0.8,
label.r = unit(0.5, "lines"), label.size = 0.5,
segment.color = "red", segment.size = 1,
stat = "sf_coordinates", seed = 1002,
max.overlaps = 20) +
labs(title = "placeholder",
caption = installation_candidates_wrapped_caption) +
scale_color_manual(values = c("Navy" = "blue",
"Army" = "green",
"Marine Corps" = "red",
"Air Force" = "orange",
"DOD" = "purple"),
name = "Service Branch") +
scale_size_continuous(labels = comma,
name = "Installation Headcount") +
theme(plot.title = element_text(hjust = 0, size = 25),
legend.position = "left",
legend.direction = "vertical",
legend.box = "vertical",
legend.justification = "right",
legend.spacing = unit(0.5, "cm"),
legend.margin = margin(r = -120),
legend.title = element_text(size = 11),
legend.text = element_text(size = 10),
legend.key.size = unit(1, "lines"),
plot.margin = margin(20, 20, 20, 20))
all_installation_candidates_map
# export map
ggsave(here("output", "all_installation_candidates_map.jpg"), plot = all_installation_candidates_map, width = 12, height = 9, dpi = 300)
# duplicate data frame
contracts1 <- contracts0
# select columns
contracts1 <- contracts1[, c("parent_award_agency_name", "total_obligated_amount", "current_total_value_of_award", "potential_total_value_of_award", "award_base_action_date_fiscal_year", "award_latest_action_date_fiscal_year", "awarding_agency_name", "awarding_sub_agency_name", "awarding_office_name", "funding_agency_name", "funding_sub_agency_name", "funding_office_name", "object_classes_funding_this_award", "recipient_name", "recipient_name_raw", "recipient_parent_name", "recipient_parent_name_raw", "prime_award_summary_place_of_performance_county_fips_code", "primary_place_of_performance_county_name", "prime_award_summary_place_of_performance_state_fips_code", "primary_place_of_performance_state_code", "primary_place_of_performance_state_name", "product_or_service_code_description", "naics_code", "naics_description", "extent_competed")]
# convert to integer columns
contracts1[, c("total_obligated_amount", "current_total_value_of_award", "potential_total_value_of_award")] <- lapply(contracts1[, c("total_obligated_amount", "current_total_value_of_award", "potential_total_value_of_award")], as.integer)
# define the breakpoints for the categories
contract_breaks <- c(0, 1e6, 25e6, 100e6, 500e6, Inf)
# define labels for the categories
contract_labels <- c("$1,000,000 & Under",
"$1,000,001 - $25,000,000",
"$25,000,001 - $100,000,000",
"$100,000,001 - $500,000,000",
"$500,000,001 & Above")
# create a new column with group identifiers
contracts1$contract_group <- cut(contracts1$total_obligated_amount, breaks = contract_breaks, labels = contract_labels, include.lowest = TRUE)
# Convert year column to factor
contracts1$award_base_action_date_fiscal_year <- factor(contracts1$award_base_action_date_fiscal_year)
# select columns for stacked bar graph
contracts2 <- contracts1[, c("total_obligated_amount", "current_total_value_of_award", "potential_total_value_of_award", "award_base_action_date_fiscal_year", "contract_group", "prime_award_summary_place_of_performance_county_fips_code", "primary_place_of_performance_county_name", "prime_award_summary_place_of_performance_state_fips_code", "primary_place_of_performance_state_code", "primary_place_of_performance_state_name")]
# remove NA values
contracts2 <- contracts2[!is.na(contracts2$contract_group), ]
# remove rows where award_base_action_date_fiscal_year = 2004
contracts2 <- contracts2[contracts2$award_base_action_date_fiscal_year != 2004, ]
# groups by fips codes and sum obligated amounts
contracts3 <- contracts2 %>%
group_by(prime_award_summary_place_of_performance_county_fips_code) %>%
summarize(total_obligated_amount_sum = sum(total_obligated_amount, na.rm = TRUE))
# remove rows where prime_award_summary_place_of_performance_county_fips_code = NA
contracts3 <- contracts3[!is.na(contracts3$prime_award_summary_place_of_performance_county_fips_code), ]
# remove rows where total_obligated_amount_sum = 0
contracts3 <- contracts3[contracts3$total_obligated_amount_sum != 0, ]
# rename columns
colnames(contracts3) <- c("fips", "total_obligated_amount_sum")
# set caption
contracts_caption_text <- paste("Source: USAspending.gov")
# set wrapped caption width
contracts_wrapped_caption <- paste(strwrap(contracts_caption_text, width = 100), collapse = "\n")
# create stacked bar graph
contracts_bar <- ggplot(contracts2, aes(x = award_base_action_date_fiscal_year, y = total_obligated_amount, fill = contract_group)) +
geom_bar(position="stack", stat="identity") +
theme_minimal() +
labs(title = "DOD-Funded Financial Readiness* Contracts (Aggregated by Size)",
subtitle = "* Contract search terms included financial readiness, financial education, financial literacy, and financial training.",
caption = contracts_wrapped_caption,
fill = "Contract Size") +
ylab("Obligated Funds") +
xlab("Fiscal Year") +
scale_y_continuous(labels = label_dollar()) +
scale_fill_manual(values = c(
"$1,000,000 & Under" = "#cbc9e2",
"$1,000,001 - $25,000,000" = "#9e9ac8",
"$25,000,001 - $100,000,000" = "#756bb1",
"$100,000,001 - $500,000,000" = "#54278f",
"$500,000,001 & Above" = "purple")) +
theme(plot.title = element_text(hjust = 0, size = 25),
axis.title.x = element_text(size = 11, vjust = 8),
axis.title.y = element_text(size = 11, margin = margin(r = 15)),
axis.text.x = element_text(size = 8, vjust = 15),
axis.text.y = element_text(size = 8),
panel.grid.major.x = element_blank(),
legend.position = "right",
legend.direction = "vertical",
legend.box = "vertical",
legend.justification = "right",
legend.spacing = unit(0.5, "cm"),
legend.margin = margin(r = -10),
legend.title = element_text(size = 11),
legend.text = element_text(size = 10),
legend.key.size = unit(1, "lines"),
plot.margin = margin(20, 20, 20, 20),
plot.caption = element_text(hjust = 1.3))
contracts_bar
# export bar plot
ggsave(here("output", "contracts_bar.jpg"), plot = contracts_bar, width = 12, height = 9, dpi = 300)
# set subtitle
rent_subtitle_text <- "The American Community Survey defines contract rent as the monthly rent agreed to or contracted for, regardless of any furnishings, utilities, fees, meals, or services that may be included."
wrapped_rent_subtitle <- str_wrap(rent_subtitle_text, width = 100)
# set caption
rent_caption_text <- paste("Source: The U.S. Census Bureau's American Community Survey, 5-Year Data (2009-2022)")
# set wrapped caption width
rent_wrapped_caption <- paste(strwrap(rent_caption_text, width = 45), collapse = "\n")
# plot rent map
contracts_map <- plot_usmap(regions = "counties", data = contracts3, values = "total_obligated_amount_sum", labels = FALSE) +
labs(title = "Median Contract Rent by County (2022)",
subtitle = wrapped_rent_subtitle,
caption = rent_wrapped_caption) +
scale_fill_continuous(low = "#cbc9e2", high = "#54278f", name = "Median Contract Rent", label = scales::dollar_format()) +
theme(plot.title = element_text(hjust = 0, size = 25),
legend.position = "left",
legend.direction = "vertical",
legend.box = "vertical",
legend.justification = "right",
legend.spacing = unit(0.5, "cm"),
legend.margin = margin(r = -130),
legend.title = element_text(size = 11),
legend.text = element_text(size = 10),
legend.key.size = unit(1, "lines"),
plot.margin = margin(20, 20, 20, 20))
contracts_map
# export map
ggsave(here("output", "contracts_map.jpg"), plot = contracts_map, width = 12, height = 9, dpi = 300)
# set subtitle
rent_subtitle_text <- "The American Community Survey defines contract rent as the monthly rent agreed to or contracted for, regardless of any furnishings, utilities, fees, meals, or services that may be included."
wrapped_rent_subtitle <- str_wrap(rent_subtitle_text, width = 100)
# set caption
rent_caption_text <- paste("Source: The U.S. Census Bureau's American Community Survey, 5-Year Data (2009-2022)")
# set wrapped caption width
rent_wrapped_caption <- paste(strwrap(rent_caption_text, width = 45), collapse = "\n")
# plot rent map
contracts_map <- plot_usmap(regions = "counties", data = contracts3, values = "total_obligated_amount_sum", labels = FALSE) +
labs(title = "DOD-Funded Financial Readiness* Contract Funding (2006 - 2023)",
subtitle = wrapped_rent_subtitle,
caption = rent_wrapped_caption) +
scale_fill_continuous(low = "#cbc9e2", high = "#54278f", name = "Median Contract Rent", label = scales::dollar_format()) +
theme(plot.title = element_text(hjust = 0, size = 25),
legend.position = "left",
legend.direction = "vertical",
legend.box = "vertical",
legend.justification = "right",
legend.spacing = unit(0.5, "cm"),
legend.margin = margin(r = -130),
legend.title = element_text(size = 11),
legend.text = element_text(size = 10),
legend.key.size = unit(1, "lines"),
plot.margin = margin(20, 20, 20, 20))
contracts_map
# export map
ggsave(here("output", "contracts_map.jpg"), plot = contracts_map, width = 12, height = 9, dpi = 300)
# plot rent map
contracts_map <- plot_usmap(regions = "counties", data = contracts3, values = "total_obligated_amount_sum", labels = FALSE) +
labs(title = "DOD-Funded Financial Readiness* Contract Funding (2006 - 2023)",
subtitle = "* Contract search terms included financial readiness, financial education, financial literacy, and financial training.",
caption = contracts_caption_text) +
scale_fill_continuous(low = "#cbc9e2", high = "#54278f", name = "Median Contract Rent", label = scales::dollar_format()) +
theme(plot.title = element_text(hjust = 0, size = 25),
legend.position = "left",
legend.direction = "vertical",
legend.box = "vertical",
legend.justification = "right",
legend.spacing = unit(0.5, "cm"),
legend.margin = margin(r = -130),
legend.title = element_text(size = 11),
legend.text = element_text(size = 10),
legend.key.size = unit(1, "lines"),
plot.margin = margin(20, 20, 20, 20))
contracts_map
# export map
ggsave(here("output", "contracts_map.jpg"), plot = contracts_map, width = 12, height = 9, dpi = 300)
# plot rent map
contracts_map <- plot_usmap(regions = "counties", data = contracts3, values = "total_obligated_amount_sum", labels = FALSE) +
labs(title = "DOD Financial Readiness* Contract Funding (2006 - 2023)",
subtitle = "* Contract search terms included financial readiness, financial education, financial literacy, and financial training.",
caption = contracts_caption_text) +
scale_fill_continuous(low = "#cbc9e2", high = "#54278f", name = "Total Obligated Funding", label = scales::dollar_format()) +
theme(plot.title = element_text(hjust = 0, size = 25),
legend.position = "left",
legend.direction = "vertical",
legend.box = "vertical",
legend.justification = "right",
legend.spacing = unit(0.5, "cm"),
legend.margin = margin(r = -130),
legend.title = element_text(size = 11),
legend.text = element_text(size = 10),
legend.key.size = unit(1, "lines"),
plot.margin = margin(20, 20, 20, 20))
contracts_map
# export map
ggsave(here("output", "contracts_map.jpg"), plot = contracts_map, width = 12, height = 9, dpi = 300)
# plot rent map
contracts_map <- plot_usmap(regions = "counties", data = contracts3, values = "total_obligated_amount_sum", labels = FALSE) +
labs(title = "Total DOD Financial Readiness* Contract Funding (2006 - 2023)",
subtitle = "* Contract search terms included financial readiness, financial education, financial literacy, and financial training.",
caption = contracts_caption_text) +
scale_fill_continuous(low = "#cbc9e2", high = "#54278f", name = "Total Obligated Funding", label = scales::dollar_format()) +
theme(plot.title = element_text(hjust = 0, size = 25),
legend.position = "left",
legend.direction = "vertical",
legend.box = "vertical",
legend.justification = "right",
legend.spacing = unit(0.5, "cm"),
legend.margin = margin(r = -130),
legend.title = element_text(size = 11),
legend.text = element_text(size = 10),
legend.key.size = unit(1, "lines"),
plot.margin = margin(20, 20, 20, 20))
contracts_map
# export map
ggsave(here("output", "contracts_map.jpg"), plot = contracts_map, width = 12, height = 9, dpi = 300)
# plot rent map
contracts_map <- plot_usmap(regions = "counties", data = contracts3, values = "total_obligated_amount_sum", labels = FALSE) +
labs(title = "Total DOD Financial Readiness* Contract Funding (2006 - 2023)",
subtitle = "* Contract search terms included financial readiness, financial education, financial literacy, and financial training.",
caption = contracts_caption_text) +
scale_fill_continuous(low = "#cbc9e2", high = "#54278f", name = "Total Obligated Funds", label = scales::dollar_format()) +
theme(plot.title = element_text(hjust = 0, size = 25),
legend.position = "left",
legend.direction = "vertical",
legend.box = "vertical",
legend.justification = "right",
legend.spacing = unit(0.5, "cm"),
legend.margin = margin(r = -130),
legend.title = element_text(size = 11),
legend.text = element_text(size = 10),
legend.key.size = unit(1, "lines"),
plot.margin = margin(20, 20, 20, 20))
contracts_map
# export map
ggsave(here("output", "contracts_map.jpg"), plot = contracts_map, width = 12, height = 9, dpi = 300)
